/*********************************************************************************************
 *
 * @file Main.cpp
 * @author Luis Miguel Huapaya
 * @date 30 Sep 2020
 * @license Private and Confidential. Internal Use Only.
 * @copyright Copyright (C) 2020 Secure AI Labs, Inc. All Rights Reserved.
 *
 ********************************************************************************************/

#include "CommandLine.h"
#include "CoreTypes.h"
#include "DebugLibrary.h"
#include "Exceptions.h"
#include "HardCodedCryptographicKeys.h"
#include "IpcTransactionHelperFunctions.h"
#include "SocketClient.h"
#include "SocketServer.h"
#include "StructuredBuffer.h"
#include "Azure.h"

#include <iostream>
#include <string>
#include <thread>
#include <chrono>
#include <fstream>

static Guid gs_oDomainIdentifier;
static std::string gs_strRootOfTrustIpcIdentifier;

static std::vector<Byte> gs_stlSerializedDigitalContract;
static std::vector<Byte> gs_stlDataset;
static const Byte gsc_abDataset[] =
{
    0xEF, 0xBE, 0xAD, 0xDE, 0xEF, 0xBE, 0xAD, 0xDE, 0x60, 0x01, 0x00, 0x00, 0xCD, 0xAB, 0x9C, 0xE5,
    0x26, 0xC1, 0x8D, 0xE8, 0xB5, 0x2E, 0x54, 0x36, 0x5C, 0x7D, 0xDA, 0x2A, 0x63, 0x78, 0x13, 0x3A,
    0x04, 0x00, 0x00, 0x00, 0x83, 0x63, 0x74, 0x83, 0x25, 0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54,
    0x0C, 0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x56, 0x65, 0x72,
    0x73, 0x69, 0x6F, 0x6E, 0x00, 0x0B, 0x04, 0x0C, 0x03, 0x01, 0x00, 0x00, 0x00, 0x45, 0xBF, 0x10,
    0x34, 0x83, 0x63, 0x74, 0x83, 0xA5, 0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x03, 0x0B, 0x00,
    0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x53, 0x69, 0x67, 0x6E, 0x65, 0x64,
    0x48, 0x61, 0x73, 0x68, 0x00, 0x0B, 0x04, 0x0C, 0x03, 0x65, 0x6E, 0x69, 0x45, 0x6B, 0x70, 0x54,
    0x6C, 0x67, 0x46, 0x47, 0x2B, 0x70, 0x58, 0x42, 0x69, 0x54, 0x44, 0x2F, 0x45, 0x32, 0x50, 0x34,
    0x2F, 0x64, 0x4C, 0x71, 0x44, 0x62, 0x72, 0x37, 0x63, 0x6F, 0x37, 0x51, 0x42, 0x73, 0x4F, 0x6A,
    0x51, 0x52, 0x78, 0x58, 0x46, 0x38, 0x47, 0x56, 0x6C, 0x64, 0x76, 0x66, 0x42, 0x73, 0x6B, 0x72,
    0x67, 0x61, 0x75, 0x4B, 0x4F, 0x52, 0x47, 0x69, 0x46, 0x31, 0x45, 0x49, 0x66, 0x71, 0x71, 0x65,
    0x36, 0x43, 0x5A, 0x50, 0x79, 0x5A, 0x54, 0x49, 0x5A, 0x51, 0x76, 0x47, 0x66, 0x73, 0x7A, 0x5A,
    0x43, 0x71, 0x6A, 0x41, 0x54, 0x34, 0x4A, 0x66, 0x5A, 0x4F, 0x6A, 0x55, 0x59, 0x35, 0x66, 0x70,
    0x77, 0x35, 0x48, 0x46, 0x68, 0x4F, 0x54, 0x68, 0x4E, 0x45, 0x65, 0x55, 0x6E, 0x79, 0x53, 0x51,
    0x4B, 0x44, 0x45, 0x4C, 0x68, 0x33, 0x72, 0x56, 0x54, 0x00, 0x45, 0xBF, 0x10, 0x34, 0x83, 0x63,
    0x74, 0x83, 0x30, 0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x0D, 0x0F, 0x00, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x4D, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4F,
    0x66, 0x66, 0x73, 0x65, 0x74, 0x00, 0x0B, 0x04, 0x0C, 0x03, 0x09, 0x14, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x45, 0xBF, 0x10, 0x34, 0x83, 0x63, 0x74, 0x83, 0x2A, 0x00, 0x00, 0x00, 0x34, 0x01,
    0xFB, 0x54, 0x08, 0x0D, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x4D,
    0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7A, 0x65, 0x00, 0x0B, 0x04, 0x0C, 0x03,
    0xE3, 0x01, 0x00, 0x00, 0x45, 0xBF, 0x10, 0x34, 0x5E, 0xC9, 0xBA, 0xDC, 0x41, 0x73, 0x4B, 0x5A,
    0x37, 0x46, 0x68, 0x4D, 0x37, 0x63, 0x75, 0x43, 0x6A, 0x76, 0x55, 0x54, 0x75, 0x56, 0x67, 0x59,
    0x45, 0x2B, 0x6F, 0x53, 0x55, 0x6D, 0x32, 0x58, 0x6B, 0x35, 0x35, 0x69, 0x79, 0x4C, 0x42, 0x6C,
    0x47, 0x6D, 0x44, 0x36, 0x71, 0x74, 0x64, 0x4A, 0x31, 0x51, 0x34, 0x36, 0x58, 0x4F, 0x4C, 0x39,
    0x4F, 0x45, 0x4E, 0x66, 0x5A, 0x53, 0x61, 0x71, 0x66, 0x6E, 0x33, 0x63, 0x63, 0x73, 0x58, 0x68,
    0x50, 0x6A, 0x79, 0x4B, 0x35, 0x58, 0x69, 0x39, 0x6E, 0x39, 0x31, 0x67, 0x78, 0x54, 0x72, 0x56,
    0x61, 0x73, 0x62, 0x37, 0x4D, 0x2B, 0x79, 0x53, 0x55, 0x56, 0x70, 0x52, 0x39, 0x70, 0x4E, 0x77,
    0x45, 0x45, 0x75, 0x53, 0x45, 0x36, 0x66, 0x4D, 0x44, 0x45, 0x6D, 0x4E, 0x75, 0x4F, 0x68, 0x4C,
    0x76, 0x53, 0x50, 0x74, 0x4D, 0x53, 0x44, 0x69, 0x52, 0x67, 0x58, 0x4E, 0x73, 0x65, 0x70, 0x61,
    0x6C, 0x5F, 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68, 0x2C, 0x73, 0x65, 0x70, 0x61, 0x6C, 0x5F, 0x77,
    0x69, 0x64, 0x74, 0x68, 0x2C, 0x70, 0x65, 0x74, 0x61, 0x6C, 0x5F, 0x6C, 0x65, 0x6E, 0x67, 0x74,
    0x68, 0x2C, 0x70, 0x65, 0x74, 0x61, 0x6C, 0x5F, 0x77, 0x69, 0x64, 0x74, 0x68, 0x2C, 0x73, 0x70,
    0x65, 0x63, 0x69, 0x65, 0x73, 0x0D, 0x0A, 0x35, 0x2E, 0x31, 0x2C, 0x33, 0x2E, 0x35, 0x2C, 0x31,
    0x2E, 0x34, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34,
    0x2E, 0x39, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x31, 0x2E, 0x34, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34, 0x2E, 0x37, 0x2C, 0x33, 0x2E, 0x32, 0x2C, 0x31,
    0x2E, 0x33, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34,
    0x2E, 0x36, 0x2C, 0x33, 0x2E, 0x31, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x30, 0x2C, 0x33, 0x2E, 0x36, 0x2C, 0x31,
    0x2E, 0x34, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x34, 0x2C, 0x33, 0x2E, 0x39, 0x2C, 0x31, 0x2E, 0x37, 0x2C, 0x30, 0x2E, 0x34, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34, 0x2E, 0x36, 0x2C, 0x33, 0x2E, 0x34, 0x2C, 0x31,
    0x2E, 0x34, 0x2C, 0x30, 0x2E, 0x33, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x30, 0x2C, 0x33, 0x2E, 0x34, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34, 0x2E, 0x34, 0x2C, 0x32, 0x2E, 0x39, 0x2C, 0x31,
    0x2E, 0x34, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34,
    0x2E, 0x39, 0x2C, 0x33, 0x2E, 0x31, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x30, 0x2E, 0x31, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x34, 0x2C, 0x33, 0x2E, 0x37, 0x2C, 0x31,
    0x2E, 0x35, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34,
    0x2E, 0x38, 0x2C, 0x33, 0x2E, 0x34, 0x2C, 0x31, 0x2E, 0x36, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34, 0x2E, 0x38, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x31,
    0x2E, 0x34, 0x2C, 0x30, 0x2E, 0x31, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34,
    0x2E, 0x33, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x31, 0x2E, 0x31, 0x2C, 0x30, 0x2E, 0x31, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x38, 0x2C, 0x34, 0x2E, 0x30, 0x2C, 0x31,
    0x2E, 0x32, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x37, 0x2C, 0x34, 0x2E, 0x34, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x30, 0x2E, 0x34, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x34, 0x2C, 0x33, 0x2E, 0x39, 0x2C, 0x31,
    0x2E, 0x33, 0x2C, 0x30, 0x2E, 0x34, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x31, 0x2C, 0x33, 0x2E, 0x35, 0x2C, 0x31, 0x2E, 0x34, 0x2C, 0x30, 0x2E, 0x33, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x37, 0x2C, 0x33, 0x2E, 0x38, 0x2C, 0x31,
    0x2E, 0x37, 0x2C, 0x30, 0x2E, 0x33, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x31, 0x2C, 0x33, 0x2E, 0x38, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x30, 0x2E, 0x33, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x34, 0x2C, 0x33, 0x2E, 0x34, 0x2C, 0x31,
    0x2E, 0x37, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x31, 0x2C, 0x33, 0x2E, 0x37, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x30, 0x2E, 0x34, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34, 0x2E, 0x36, 0x2C, 0x33, 0x2E, 0x36, 0x2C, 0x31,
    0x2E, 0x30, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x31, 0x2C, 0x33, 0x2E, 0x33, 0x2C, 0x31, 0x2E, 0x37, 0x2C, 0x30, 0x2E, 0x35, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34, 0x2E, 0x38, 0x2C, 0x33, 0x2E, 0x34, 0x2C, 0x31,
    0x2E, 0x39, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x30, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x31, 0x2E, 0x36, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x30, 0x2C, 0x33, 0x2E, 0x34, 0x2C, 0x31,
    0x2E, 0x36, 0x2C, 0x30, 0x2E, 0x34, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x32, 0x2C, 0x33, 0x2E, 0x35, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x32, 0x2C, 0x33, 0x2E, 0x34, 0x2C, 0x31,
    0x2E, 0x34, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34,
    0x2E, 0x37, 0x2C, 0x33, 0x2E, 0x32, 0x2C, 0x31, 0x2E, 0x36, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34, 0x2E, 0x38, 0x2C, 0x33, 0x2E, 0x31, 0x2C, 0x31,
    0x2E, 0x36, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x34, 0x2C, 0x33, 0x2E, 0x34, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x30, 0x2E, 0x34, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x32, 0x2C, 0x34, 0x2E, 0x31, 0x2C, 0x31,
    0x2E, 0x35, 0x2C, 0x30, 0x2E, 0x31, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x35, 0x2C, 0x34, 0x2E, 0x32, 0x2C, 0x31, 0x2E, 0x34, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34, 0x2E, 0x39, 0x2C, 0x33, 0x2E, 0x31, 0x2C, 0x31,
    0x2E, 0x35, 0x2C, 0x30, 0x2E, 0x31, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x30, 0x2C, 0x33, 0x2E, 0x32, 0x2C, 0x31, 0x2E, 0x32, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x35, 0x2C, 0x33, 0x2E, 0x35, 0x2C, 0x31,
    0x2E, 0x33, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34,
    0x2E, 0x39, 0x2C, 0x33, 0x2E, 0x31, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x30, 0x2E, 0x31, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34, 0x2E, 0x34, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x31,
    0x2E, 0x33, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x31, 0x2C, 0x33, 0x2E, 0x34, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x30, 0x2C, 0x33, 0x2E, 0x35, 0x2C, 0x31,
    0x2E, 0x33, 0x2C, 0x30, 0x2E, 0x33, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34,
    0x2E, 0x35, 0x2C, 0x32, 0x2E, 0x33, 0x2C, 0x31, 0x2E, 0x33, 0x2C, 0x30, 0x2E, 0x33, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34, 0x2E, 0x34, 0x2C, 0x33, 0x2E, 0x32, 0x2C, 0x31,
    0x2E, 0x33, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x30, 0x2C, 0x33, 0x2E, 0x35, 0x2C, 0x31, 0x2E, 0x36, 0x2C, 0x30, 0x2E, 0x36, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x31, 0x2C, 0x33, 0x2E, 0x38, 0x2C, 0x31,
    0x2E, 0x39, 0x2C, 0x30, 0x2E, 0x34, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34,
    0x2E, 0x38, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x31, 0x2E, 0x34, 0x2C, 0x30, 0x2E, 0x33, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x31, 0x2C, 0x33, 0x2E, 0x38, 0x2C, 0x31,
    0x2E, 0x36, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x34,
    0x2E, 0x36, 0x2C, 0x33, 0x2E, 0x32, 0x2C, 0x31, 0x2E, 0x34, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x33, 0x2C, 0x33, 0x2E, 0x37, 0x2C, 0x31,
    0x2E, 0x35, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73, 0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x35,
    0x2E, 0x30, 0x2C, 0x33, 0x2E, 0x33, 0x2C, 0x31, 0x2E, 0x34, 0x2C, 0x30, 0x2E, 0x32, 0x2C, 0x73,
    0x65, 0x74, 0x6F, 0x73, 0x61, 0x0D, 0x0A, 0x37, 0x2E, 0x30, 0x2C, 0x33, 0x2E, 0x32, 0x2C, 0x34,
    0x2E, 0x37, 0x2C, 0x31, 0x2E, 0x34, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F,
    0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x34, 0x2C, 0x33, 0x2E, 0x32, 0x2C, 0x34, 0x2E, 0x35, 0x2C, 0x31,
    0x2E, 0x35, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36,
    0x2E, 0x39, 0x2C, 0x33, 0x2E, 0x31, 0x2C, 0x34, 0x2E, 0x39, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x76,
    0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x35, 0x2C, 0x32,
    0x2E, 0x33, 0x2C, 0x34, 0x2E, 0x30, 0x2C, 0x31, 0x2E, 0x33, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69,
    0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x35, 0x2C, 0x32, 0x2E, 0x38, 0x2C, 0x34,
    0x2E, 0x36, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F,
    0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x37, 0x2C, 0x32, 0x2E, 0x38, 0x2C, 0x34, 0x2E, 0x35, 0x2C, 0x31,
    0x2E, 0x33, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36,
    0x2E, 0x33, 0x2C, 0x33, 0x2E, 0x33, 0x2C, 0x34, 0x2E, 0x37, 0x2C, 0x31, 0x2E, 0x36, 0x2C, 0x76,
    0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x34, 0x2E, 0x39, 0x2C, 0x32,
    0x2E, 0x34, 0x2C, 0x33, 0x2E, 0x33, 0x2C, 0x31, 0x2E, 0x30, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69,
    0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x36, 0x2C, 0x32, 0x2E, 0x39, 0x2C, 0x34,
    0x2E, 0x36, 0x2C, 0x31, 0x2E, 0x33, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F,
    0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x32, 0x2C, 0x32, 0x2E, 0x37, 0x2C, 0x33, 0x2E, 0x39, 0x2C, 0x31,
    0x2E, 0x34, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35,
    0x2E, 0x30, 0x2C, 0x32, 0x2E, 0x30, 0x2C, 0x33, 0x2E, 0x35, 0x2C, 0x31, 0x2E, 0x30, 0x2C, 0x76,
    0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x39, 0x2C, 0x33,
    0x2E, 0x30, 0x2C, 0x34, 0x2E, 0x32, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69,
    0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x30, 0x2C, 0x32, 0x2E, 0x32, 0x2C, 0x34,
    0x2E, 0x30, 0x2C, 0x31, 0x2E, 0x30, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F,
    0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x31, 0x2C, 0x32, 0x2E, 0x39, 0x2C, 0x34, 0x2E, 0x37, 0x2C, 0x31,
    0x2E, 0x34, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35,
    0x2E, 0x36, 0x2C, 0x32, 0x2E, 0x39, 0x2C, 0x33, 0x2E, 0x36, 0x2C, 0x31, 0x2E, 0x33, 0x2C, 0x76,
    0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x37, 0x2C, 0x33,
    0x2E, 0x31, 0x2C, 0x34, 0x2E, 0x34, 0x2C, 0x31, 0x2E, 0x34, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69,
    0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x36, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x34,
    0x2E, 0x35, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F,
    0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x38, 0x2C, 0x32, 0x2E, 0x37, 0x2C, 0x34, 0x2E, 0x31, 0x2C, 0x31,
    0x2E, 0x30, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36,
    0x2E, 0x32, 0x2C, 0x32, 0x2E, 0x32, 0x2C, 0x34, 0x2E, 0x35, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x76,
    0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x36, 0x2C, 0x32,
    0x2E, 0x35, 0x2C, 0x33, 0x2E, 0x39, 0x2C, 0x31, 0x2E, 0x31, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69,
    0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x39, 0x2C, 0x33, 0x2E, 0x32, 0x2C, 0x34,
    0x2E, 0x38, 0x2C, 0x31, 0x2E, 0x38, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F,
    0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x31, 0x2C, 0x32, 0x2E, 0x38, 0x2C, 0x34, 0x2E, 0x30, 0x2C, 0x31,
    0x2E, 0x33, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36,
    0x2E, 0x33, 0x2C, 0x32, 0x2E, 0x35, 0x2C, 0x34, 0x2E, 0x39, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x76,
    0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x31, 0x2C, 0x32,
    0x2E, 0x38, 0x2C, 0x34, 0x2E, 0x37, 0x2C, 0x31, 0x2E, 0x32, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69,
    0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x34, 0x2C, 0x32, 0x2E, 0x39, 0x2C, 0x34,
    0x2E, 0x33, 0x2C, 0x31, 0x2E, 0x33, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F,
    0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x36, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x34, 0x2E, 0x34, 0x2C, 0x31,
    0x2E, 0x34, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36,
    0x2E, 0x38, 0x2C, 0x32, 0x2E, 0x38, 0x2C, 0x34, 0x2E, 0x38, 0x2C, 0x31, 0x2E, 0x34, 0x2C, 0x76,
    0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x37, 0x2C, 0x33,
    0x2E, 0x30, 0x2C, 0x35, 0x2E, 0x30, 0x2C, 0x31, 0x2E, 0x37, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69,
    0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x30, 0x2C, 0x32, 0x2E, 0x39, 0x2C, 0x34,
    0x2E, 0x35, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F,
    0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x37, 0x2C, 0x32, 0x2E, 0x36, 0x2C, 0x33, 0x2E, 0x35, 0x2C, 0x31,
    0x2E, 0x30, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35,
    0x2E, 0x35, 0x2C, 0x32, 0x2E, 0x34, 0x2C, 0x33, 0x2E, 0x38, 0x2C, 0x31, 0x2E, 0x31, 0x2C, 0x76,
    0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x35, 0x2C, 0x32,
    0x2E, 0x34, 0x2C, 0x33, 0x2E, 0x37, 0x2C, 0x31, 0x2E, 0x30, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69,
    0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x38, 0x2C, 0x32, 0x2E, 0x37, 0x2C, 0x33,
    0x2E, 0x39, 0x2C, 0x31, 0x2E, 0x32, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F,
    0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x30, 0x2C, 0x32, 0x2E, 0x37, 0x2C, 0x35, 0x2E, 0x31, 0x2C, 0x31,
    0x2E, 0x36, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35,
    0x2E, 0x34, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x34, 0x2E, 0x35, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x76,
    0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x30, 0x2C, 0x33,
    0x2E, 0x34, 0x2C, 0x34, 0x2E, 0x35, 0x2C, 0x31, 0x2E, 0x36, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69,
    0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x37, 0x2C, 0x33, 0x2E, 0x31, 0x2C, 0x34,
    0x2E, 0x37, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F,
    0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x33, 0x2C, 0x32, 0x2E, 0x33, 0x2C, 0x34, 0x2E, 0x34, 0x2C, 0x31,
    0x2E, 0x33, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35,
    0x2E, 0x36, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x34, 0x2E, 0x31, 0x2C, 0x31, 0x2E, 0x33, 0x2C, 0x76,
    0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x35, 0x2C, 0x32,
    0x2E, 0x35, 0x2C, 0x34, 0x2E, 0x30, 0x2C, 0x31, 0x2E, 0x33, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69,
    0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x35, 0x2C, 0x32, 0x2E, 0x36, 0x2C, 0x34,
    0x2E, 0x34, 0x2C, 0x31, 0x2E, 0x32, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F,
    0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x31, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x34, 0x2E, 0x36, 0x2C, 0x31,
    0x2E, 0x34, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35,
    0x2E, 0x38, 0x2C, 0x32, 0x2E, 0x36, 0x2C, 0x34, 0x2E, 0x30, 0x2C, 0x31, 0x2E, 0x32, 0x2C, 0x76,
    0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x30, 0x2C, 0x32,
    0x2E, 0x33, 0x2C, 0x33, 0x2E, 0x33, 0x2C, 0x31, 0x2E, 0x30, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69,
    0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x36, 0x2C, 0x32, 0x2E, 0x37, 0x2C, 0x34,
    0x2E, 0x32, 0x2C, 0x31, 0x2E, 0x33, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F,
    0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x37, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x34, 0x2E, 0x32, 0x2C, 0x31,
    0x2E, 0x32, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35,
    0x2E, 0x37, 0x2C, 0x32, 0x2E, 0x39, 0x2C, 0x34, 0x2E, 0x32, 0x2C, 0x31, 0x2E, 0x33, 0x2C, 0x76,
    0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36, 0x2E, 0x32, 0x2C, 0x32,
    0x2E, 0x39, 0x2C, 0x34, 0x2E, 0x33, 0x2C, 0x31, 0x2E, 0x33, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69,
    0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x31, 0x2C, 0x32, 0x2E, 0x35, 0x2C, 0x33,
    0x2E, 0x30, 0x2C, 0x31, 0x2E, 0x31, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F,
    0x72, 0x0D, 0x0A, 0x35, 0x2E, 0x37, 0x2C, 0x32, 0x2E, 0x38, 0x2C, 0x34, 0x2E, 0x31, 0x2C, 0x31,
    0x2E, 0x33, 0x2C, 0x76, 0x65, 0x72, 0x73, 0x69, 0x63, 0x6F, 0x6C, 0x6F, 0x72, 0x0D, 0x0A, 0x36,
    0x2E, 0x33, 0x2C, 0x33, 0x2E, 0x33, 0x2C, 0x36, 0x2E, 0x30, 0x2C, 0x32, 0x2E, 0x35, 0x2C, 0x76,
    0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x38, 0x2C, 0x32, 0x2E,
    0x37, 0x2C, 0x35, 0x2E, 0x31, 0x2C, 0x31, 0x2E, 0x39, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E,
    0x69, 0x63, 0x61, 0x0D, 0x0A, 0x37, 0x2E, 0x31, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x35, 0x2E, 0x39,
    0x2C, 0x32, 0x2E, 0x31, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A,
    0x36, 0x2E, 0x33, 0x2C, 0x32, 0x2E, 0x39, 0x2C, 0x35, 0x2E, 0x36, 0x2C, 0x31, 0x2E, 0x38, 0x2C,
    0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x35, 0x2C, 0x33,
    0x2E, 0x30, 0x2C, 0x35, 0x2E, 0x38, 0x2C, 0x32, 0x2E, 0x32, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69,
    0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x37, 0x2E, 0x36, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x36, 0x2E,
    0x36, 0x2C, 0x32, 0x2E, 0x31, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D,
    0x0A, 0x34, 0x2E, 0x39, 0x2C, 0x32, 0x2E, 0x35, 0x2C, 0x34, 0x2E, 0x35, 0x2C, 0x31, 0x2E, 0x37,
    0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x37, 0x2E, 0x33, 0x2C,
    0x32, 0x2E, 0x39, 0x2C, 0x36, 0x2E, 0x33, 0x2C, 0x31, 0x2E, 0x38, 0x2C, 0x76, 0x69, 0x72, 0x67,
    0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x37, 0x2C, 0x32, 0x2E, 0x35, 0x2C, 0x35,
    0x2E, 0x38, 0x2C, 0x31, 0x2E, 0x38, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61,
    0x0D, 0x0A, 0x37, 0x2E, 0x32, 0x2C, 0x33, 0x2E, 0x36, 0x2C, 0x36, 0x2E, 0x31, 0x2C, 0x32, 0x2E,
    0x35, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x35,
    0x2C, 0x33, 0x2E, 0x32, 0x2C, 0x35, 0x2E, 0x31, 0x2C, 0x32, 0x2E, 0x30, 0x2C, 0x76, 0x69, 0x72,
    0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x34, 0x2C, 0x32, 0x2E, 0x37, 0x2C,
    0x35, 0x2E, 0x33, 0x2C, 0x31, 0x2E, 0x39, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63,
    0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x38, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x35, 0x2E, 0x35, 0x2C, 0x32,
    0x2E, 0x31, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x35, 0x2E,
    0x37, 0x2C, 0x32, 0x2E, 0x35, 0x2C, 0x35, 0x2E, 0x30, 0x2C, 0x32, 0x2E, 0x30, 0x2C, 0x76, 0x69,
    0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x38, 0x2C, 0x32, 0x2E, 0x38,
    0x2C, 0x35, 0x2E, 0x31, 0x2C, 0x32, 0x2E, 0x34, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69,
    0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x34, 0x2C, 0x33, 0x2E, 0x32, 0x2C, 0x35, 0x2E, 0x33, 0x2C,
    0x32, 0x2E, 0x33, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36,
    0x2E, 0x35, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x35, 0x2E, 0x35, 0x2C, 0x31, 0x2E, 0x38, 0x2C, 0x76,
    0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x37, 0x2E, 0x37, 0x2C, 0x33, 0x2E,
    0x38, 0x2C, 0x36, 0x2E, 0x37, 0x2C, 0x32, 0x2E, 0x32, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E,
    0x69, 0x63, 0x61, 0x0D, 0x0A, 0x37, 0x2E, 0x37, 0x2C, 0x32, 0x2E, 0x36, 0x2C, 0x36, 0x2E, 0x39,
    0x2C, 0x32, 0x2E, 0x33, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A,
    0x36, 0x2E, 0x30, 0x2C, 0x32, 0x2E, 0x32, 0x2C, 0x35, 0x2E, 0x30, 0x2C, 0x31, 0x2E, 0x35, 0x2C,
    0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x39, 0x2C, 0x33,
    0x2E, 0x32, 0x2C, 0x35, 0x2E, 0x37, 0x2C, 0x32, 0x2E, 0x33, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69,
    0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x36, 0x2C, 0x32, 0x2E, 0x38, 0x2C, 0x34, 0x2E,
    0x39, 0x2C, 0x32, 0x2E, 0x30, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D,
    0x0A, 0x37, 0x2E, 0x37, 0x2C, 0x32, 0x2E, 0x38, 0x2C, 0x36, 0x2E, 0x37, 0x2C, 0x32, 0x2E, 0x30,
    0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x33, 0x2C,
    0x32, 0x2E, 0x37, 0x2C, 0x34, 0x2E, 0x39, 0x2C, 0x31, 0x2E, 0x38, 0x2C, 0x76, 0x69, 0x72, 0x67,
    0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x37, 0x2C, 0x33, 0x2E, 0x33, 0x2C, 0x35,
    0x2E, 0x37, 0x2C, 0x32, 0x2E, 0x31, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61,
    0x0D, 0x0A, 0x37, 0x2E, 0x32, 0x2C, 0x33, 0x2E, 0x32, 0x2C, 0x36, 0x2E, 0x30, 0x2C, 0x31, 0x2E,
    0x38, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x32,
    0x2C, 0x32, 0x2E, 0x38, 0x2C, 0x34, 0x2E, 0x38, 0x2C, 0x31, 0x2E, 0x38, 0x2C, 0x76, 0x69, 0x72,
    0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x31, 0x2C, 0x33, 0x2E, 0x30, 0x2C,
    0x34, 0x2E, 0x39, 0x2C, 0x31, 0x2E, 0x38, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63,
    0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x34, 0x2C, 0x32, 0x2E, 0x38, 0x2C, 0x35, 0x2E, 0x36, 0x2C, 0x32,
    0x2E, 0x31, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x37, 0x2E,
    0x32, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x35, 0x2E, 0x38, 0x2C, 0x31, 0x2E, 0x36, 0x2C, 0x76, 0x69,
    0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x37, 0x2E, 0x34, 0x2C, 0x32, 0x2E, 0x38,
    0x2C, 0x36, 0x2E, 0x31, 0x2C, 0x31, 0x2E, 0x39, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69,
    0x63, 0x61, 0x0D, 0x0A, 0x37, 0x2E, 0x39, 0x2C, 0x33, 0x2E, 0x38, 0x2C, 0x36, 0x2E, 0x34, 0x2C,
    0x32, 0x2E, 0x30, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36,
    0x2E, 0x34, 0x2C, 0x32, 0x2E, 0x38, 0x2C, 0x35, 0x2E, 0x36, 0x2C, 0x32, 0x2E, 0x32, 0x2C, 0x76,
    0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x33, 0x2C, 0x32, 0x2E,
    0x38, 0x2C, 0x35, 0x2E, 0x31, 0x2C, 0x31, 0x2E, 0x35, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E,
    0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x31, 0x2C, 0x32, 0x2E, 0x36, 0x2C, 0x35, 0x2E, 0x36,
    0x2C, 0x31, 0x2E, 0x34, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A,
    0x37, 0x2E, 0x37, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x36, 0x2E, 0x31, 0x2C, 0x32, 0x2E, 0x33, 0x2C,
    0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x33, 0x2C, 0x33,
    0x2E, 0x34, 0x2C, 0x35, 0x2E, 0x36, 0x2C, 0x32, 0x2E, 0x34, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69,
    0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x34, 0x2C, 0x33, 0x2E, 0x31, 0x2C, 0x35, 0x2E,
    0x35, 0x2C, 0x31, 0x2E, 0x38, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D,
    0x0A, 0x36, 0x2E, 0x30, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x34, 0x2E, 0x38, 0x2C, 0x31, 0x2E, 0x38,
    0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x39, 0x2C,
    0x33, 0x2E, 0x31, 0x2C, 0x35, 0x2E, 0x34, 0x2C, 0x32, 0x2E, 0x31, 0x2C, 0x76, 0x69, 0x72, 0x67,
    0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x37, 0x2C, 0x33, 0x2E, 0x31, 0x2C, 0x35,
    0x2E, 0x36, 0x2C, 0x32, 0x2E, 0x34, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61,
    0x0D, 0x0A, 0x36, 0x2E, 0x39, 0x2C, 0x33, 0x2E, 0x31, 0x2C, 0x35, 0x2E, 0x31, 0x2C, 0x32, 0x2E,
    0x33, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x38,
    0x2C, 0x32, 0x2E, 0x37, 0x2C, 0x35, 0x2E, 0x31, 0x2C, 0x31, 0x2E, 0x39, 0x2C, 0x76, 0x69, 0x72,
    0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x38, 0x2C, 0x33, 0x2E, 0x32, 0x2C,
    0x35, 0x2E, 0x39, 0x2C, 0x32, 0x2E, 0x33, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63,
    0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x37, 0x2C, 0x33, 0x2E, 0x33, 0x2C, 0x35, 0x2E, 0x37, 0x2C, 0x32,
    0x2E, 0x35, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E,
    0x37, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x35, 0x2E, 0x32, 0x2C, 0x32, 0x2E, 0x33, 0x2C, 0x76, 0x69,
    0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x33, 0x2C, 0x32, 0x2E, 0x35,
    0x2C, 0x35, 0x2E, 0x30, 0x2C, 0x31, 0x2E, 0x39, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69,
    0x63, 0x61, 0x0D, 0x0A, 0x36, 0x2E, 0x35, 0x2C, 0x33, 0x2E, 0x30, 0x2C, 0x35, 0x2E, 0x32, 0x2C,
    0x32, 0x2E, 0x30, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x36,
    0x2E, 0x32, 0x2C, 0x33, 0x2E, 0x34, 0x2C, 0x35, 0x2E, 0x34, 0x2C, 0x32, 0x2E, 0x33, 0x2C, 0x76,
    0x69, 0x72, 0x67, 0x69, 0x6E, 0x69, 0x63, 0x61, 0x0D, 0x0A, 0x35, 0x2E, 0x39, 0x2C, 0x33, 0x2E,
    0x30, 0x2C, 0x35, 0x2E, 0x31, 0x2C, 0x31, 0x2E, 0x38, 0x2C, 0x76, 0x69, 0x72, 0x67, 0x69, 0x6E,
    0x69, 0x63, 0x61, 0x0D, 0x0A, 0xCD, 0xAB, 0x9C, 0xE5, 0x67, 0xB4, 0x5B, 0xDD, 0xDC, 0x89, 0x1F,
    0xB3, 0xFE, 0xE2, 0xE6, 0xF7, 0xAC, 0xFA, 0x15, 0x64, 0x0A, 0x00, 0x00, 0x00, 0x83, 0x63, 0x74,
    0x83, 0x25, 0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x03, 0x0B, 0x00, 0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x43, 0x6F, 0x6C, 0x75, 0x6D, 0x6E, 0x4E, 0x61, 0x6D, 0x65,
    0x00, 0x0B, 0x04, 0x0C, 0x03, 0x00, 0x45, 0xBF, 0x10, 0x34, 0x83, 0x63, 0x74, 0x83, 0x44, 0x00,
    0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x03, 0x0B, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x0D,
    0x02, 0x0F, 0x01, 0x43, 0x6F, 0x6C, 0x75, 0x6D, 0x6E, 0x54, 0x79, 0x70, 0x65, 0x00, 0x0B, 0x04,
    0x0C, 0x03, 0x2C, 0x46, 0x6C, 0x6F, 0x61, 0x74, 0x2C, 0x46, 0x6C, 0x6F, 0x61, 0x74, 0x2C, 0x46,
    0x6C, 0x6F, 0x61, 0x74, 0x2C, 0x46, 0x6C, 0x6F, 0x61, 0x74, 0x2C, 0x53, 0x74, 0x72, 0x69, 0x6E,
    0x67, 0x00, 0x45, 0xBF, 0x10, 0x34, 0x83, 0x63, 0x74, 0x83, 0x28, 0x00, 0x00, 0x00, 0x34, 0x01,
    0xFB, 0x54, 0x08, 0x0B, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x4E,
    0x75, 0x6D, 0x62, 0x65, 0x72, 0x52, 0x6F, 0x77, 0x73, 0x00, 0x0B, 0x04, 0x0C, 0x03, 0x97, 0x00,
    0x00, 0x00, 0x45, 0xBF, 0x10, 0x34, 0x83, 0x63, 0x74, 0x83, 0x41, 0x00, 0x00, 0x00, 0x34, 0x01,
    0xFB, 0x54, 0x03, 0x09, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x48,
    0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x00, 0x0B, 0x04, 0x0C, 0x03, 0x65, 0x79, 0x65, 0x73,
    0x2C, 0x70, 0x65, 0x74, 0x61, 0x6C, 0x2C, 0x69, 0x72, 0x69, 0x73, 0x2C, 0x20, 0x73, 0x70, 0x65,
    0x63, 0x69, 0x65, 0x73, 0x2C, 0x73, 0x65, 0x70, 0x61, 0x6C, 0x00, 0x45, 0xBF, 0x10, 0x34, 0x83,
    0x63, 0x74, 0x83, 0x2B, 0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x03, 0x05, 0x00, 0x00, 0x00,
    0x0D, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x4E, 0x61, 0x6D, 0x65, 0x00, 0x0B, 0x04, 0x0C,
    0x03, 0x49, 0x72, 0x69, 0x73, 0x5F, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x00, 0x45, 0xBF,
    0x10, 0x34, 0x83, 0x63, 0x74, 0x83, 0x43, 0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x03, 0x05,
    0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x55, 0x55, 0x49, 0x44, 0x00,
    0x0B, 0x04, 0x0C, 0x03, 0x30, 0x31, 0x30, 0x33, 0x64, 0x36, 0x34, 0x30, 0x2D, 0x32, 0x30, 0x39,
    0x65, 0x2D, 0x34, 0x65, 0x37, 0x31, 0x2D, 0x38, 0x34, 0x30, 0x61, 0x2D, 0x37, 0x39, 0x66, 0x31,
    0x35, 0x32, 0x37, 0x63, 0x34, 0x61, 0x35, 0x34, 0x00, 0x45, 0xBF, 0x10, 0x34, 0x83, 0x63, 0x74,
    0x83, 0x36, 0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x03, 0x12, 0x00, 0x00, 0x00, 0x0B, 0x00,
    0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x43, 0x6F, 0x6C, 0x75, 0x6D, 0x6E, 0x53, 0x65, 0x6E, 0x73,
    0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x00, 0x0B, 0x04, 0x0C, 0x03, 0x2C, 0x31, 0x2C, 0x31,
    0x2C, 0x31, 0x2C, 0x31, 0x2C, 0x31, 0x00, 0x45, 0xBF, 0x10, 0x34, 0x83, 0x63, 0x74, 0x83, 0x2D,
    0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x0D, 0x0C, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
    0x0D, 0x02, 0x0F, 0x01, 0x54, 0x61, 0x62, 0x6C, 0x65, 0x4F, 0x66, 0x66, 0x73, 0x65, 0x74, 0x00,
    0x0B, 0x04, 0x0C, 0x03, 0xEC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0xBF, 0x10, 0x34,
    0x83, 0x63, 0x74, 0x83, 0x2B, 0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x08, 0x0E, 0x00, 0x00,
    0x00, 0x04, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x43,
    0x6F, 0x6C, 0x75, 0x6D, 0x6E, 0x73, 0x00, 0x0B, 0x04, 0x0C, 0x03, 0x05, 0x00, 0x00, 0x00, 0x45,
    0xBF, 0x10, 0x34, 0x83, 0x63, 0x74, 0x83, 0x3A, 0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x03,
    0x0C, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x44, 0x65, 0x73, 0x63,
    0x72, 0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x0B, 0x04, 0x0C, 0x03, 0x54, 0x68, 0x69, 0x73,
    0x20, 0x69, 0x73, 0x20, 0x69, 0x72, 0x69, 0x73, 0x20, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
    0x00, 0x45, 0xBF, 0x10, 0x34, 0x5E, 0xC9, 0xBA, 0xDC, 0xCD, 0xAB, 0x9C, 0xE5, 0xF5, 0x14, 0x39,
    0x95, 0x05, 0xE8, 0x40, 0x4B, 0x76, 0xCD, 0x75, 0xEB, 0x4B, 0x17, 0xBF, 0xA9, 0x08, 0x00, 0x00,
    0x00, 0x83, 0x63, 0x74, 0x83, 0x2A, 0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x08, 0x0D, 0x00,
    0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72,
    0x54, 0x61, 0x62, 0x6C, 0x65, 0x73, 0x00, 0x0B, 0x04, 0x0C, 0x03, 0x01, 0x00, 0x00, 0x00, 0x45,
    0xBF, 0x10, 0x34, 0x83, 0x63, 0x74, 0x83, 0x2B, 0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x09,
    0x0A, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x54, 0x69, 0x6D, 0x65,
    0x73, 0x74, 0x61, 0x6D, 0x70, 0x00, 0x0B, 0x04, 0x0C, 0x03, 0x5B, 0x6E, 0xC6, 0x5F, 0x00, 0x00,
    0x00, 0x00, 0x45, 0xBF, 0x10, 0x34, 0x83, 0x63, 0x74, 0x83, 0x2A, 0x00, 0x00, 0x00, 0x34, 0x01,
    0xFB, 0x54, 0x03, 0x05, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x4E,
    0x61, 0x6D, 0x65, 0x00, 0x0B, 0x04, 0x0C, 0x03, 0x49, 0x72, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61,
    0x73, 0x65, 0x74, 0x00, 0x45, 0xBF, 0x10, 0x34, 0x83, 0x63, 0x74, 0x83, 0x32, 0x00, 0x00, 0x00,
    0x34, 0x01, 0xFB, 0x54, 0x03, 0x05, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F,
    0x01, 0x54, 0x61, 0x67, 0x73, 0x00, 0x0B, 0x04, 0x0C, 0x03, 0x74, 0x61, 0x67, 0x31, 0x2C, 0x74,
    0x61, 0x67, 0x32, 0x2C, 0x74, 0x61, 0x67, 0x33, 0x2C, 0x74, 0x61, 0x67, 0x34, 0x00, 0x45, 0xBF,
    0x10, 0x34, 0x83, 0x63, 0x74, 0x83, 0x43, 0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x03, 0x05,
    0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x55, 0x55, 0x49, 0x44, 0x00,
    0x0B, 0x04, 0x0C, 0x03, 0x36, 0x61, 0x36, 0x33, 0x34, 0x37, 0x33, 0x32, 0x2D, 0x36, 0x32, 0x61,
    0x32, 0x2D, 0x34, 0x38, 0x35, 0x31, 0x2D, 0x38, 0x64, 0x38, 0x35, 0x2D, 0x37, 0x65, 0x65, 0x35,
    0x30, 0x65, 0x38, 0x33, 0x31, 0x61, 0x62, 0x39, 0x00, 0x45, 0xBF, 0x10, 0x34, 0x83, 0x63, 0x74,
    0x83, 0x2C, 0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x12, 0x0B, 0x00, 0x00, 0x00, 0x08, 0x00,
    0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x53, 0x69, 0x7A, 0x65, 0x54, 0x61, 0x62, 0x6C, 0x65, 0x73,
    0x00, 0x0B, 0x04, 0x0C, 0x03, 0x74, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0xBF, 0x10,
    0x34, 0x83, 0x63, 0x74, 0x83, 0x2E, 0x00, 0x00, 0x00, 0x34, 0x01, 0xFB, 0x54, 0x12, 0x0D, 0x00,
    0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01, 0x4F, 0x66, 0x66, 0x73, 0x65, 0x74,
    0x54, 0x61, 0x62, 0x6C, 0x65, 0x73, 0x00, 0x0B, 0x04, 0x0C, 0x03, 0x95, 0x11, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x45, 0xBF, 0x10, 0x34, 0x83, 0x63, 0x74, 0x83, 0x39, 0x00, 0x00, 0x00, 0x34,
    0x01, 0xFB, 0x54, 0x03, 0x0C, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x0D, 0x02, 0x0F, 0x01,
    0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x0B, 0x04, 0x0C, 0x03,
    0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61,
    0x73, 0x65, 0x74, 0x00, 0x45, 0xBF, 0x10, 0x34, 0x5E, 0xC9, 0xBA, 0xDC, 0xEF, 0xBE, 0xAD, 0xDE,
    0xEF, 0xBE, 0xAD, 0xDE
};

/********************************************************************************************/

static std::vector<Byte> __stdcall WaitForInitializationParameters(void)
{
    __DebugFunction();

    std::vector<Byte> stlSerializedParameters;
    SocketServer oSocketServer("{b675be6d-b092-4b37-9e07-f1d645fc0f32}");
    while (false == oSocketServer.WaitForConnection(1000))
    {
        // Put the thread into efficient sleep to give a chance for the other process
        // to connect. This reduces thread contention.
        std::this_thread::sleep_for(std::chrono::milliseconds(10));
    }
    // There is a connection is waiting to be made!!!
    Socket * poSocket = oSocketServer.Accept();
    _ThrowBaseExceptionIf((nullptr == poSocket), "Unexpected nullptr returned from TlsServer.Accept()", nullptr);
    stlSerializedParameters = ::GetIpcTransaction(poSocket);
    // Close the connection
    poSocket->Release();

    return stlSerializedParameters;
}

/********************************************************************************************/

static void __stdcall InitializeRootOfTrust(
    _in const char * c_szIpcPathForInitialization,
    _in const std::vector<Byte> & c_oSerializedInitializationParameters
    )
{
    __DebugFunction();

    StructuredBuffer oInitializationData;//(c_oSerializedInitializationParameters);

    oInitializationData.PutBuffer("DigitalContract", gc_abResearcherPublicKeyCertificate, gc_unResearcherPublicKeyCertificateSizeInBytes);
    oInitializationData.PutBuffer("GlobalRootKeyCertificate", gc_abRootPublicKeyCertificate, gc_unRootPublicKeyCertificateSizeInBytes);
    oInitializationData.PutBuffer("ComputationalDomainRootKeyCertificate", gc_abResearcherPublicKeyCertificate, gc_unResearcherPublicKeyCertificateSizeInBytes);
    oInitializationData.PutBuffer("DataDomainRootKeyCertificate", gc_abDataOwnerPublicKeyCertificate, gc_unDataOwnerPublicKeyCertificateSizeInBytes);
    oInitializationData.PutBuffer("DataOwnerAccessToken", gc_abDataOwnerPublicKeyCertificate, gc_unDataOwnerPublicKeyCertificateSizeInBytes);
    oInitializationData.PutGuid("ClusterUuid", Guid("{FE57ECAD-BBD2-4863-997A-1DA88FE56AB4}"));
    oInitializationData.PutGuid("RootOfTrustDomainUuid", Guid("{1C33BB1D-3F5C-4069-AABD-BEA2AF4A4941}"));
    oInitializationData.PutGuid("ComputationalDomainUuid", Guid("{C82B3A05-6407-44A5-B18E-6E8F11C38F07}"));
    oInitializationData.PutGuid("DataDomainUuid", Guid("{879B5432-C810-4A11-A676-BBE1642DF203}"));
    oInitializationData.PutBuffer("Dataset", gsc_abDataset, sizeof(gsc_abDataset));

    Socket * poSocket = ::ConnectToUnixDomainSocket(c_szIpcPathForInitialization);
    (void) ::PutIpcTransaction(poSocket, oInitializationData);
    poSocket->Release();
}

/********************************************************************************************/

int __cdecl main(
    _in int nNumberOfArguments,
    _in char ** pszCommandLineArguments
    )
{
    __DebugFunction();

    try
    {
        std::cout << ">>> Initializer process" << std::endl;
        // Parse the command line
        StructuredBuffer oCommandLineArguments = ::ParseCommandLineParameters((unsigned int) nNumberOfArguments, (const char **) pszCommandLineArguments);
        // First we wait for the initialization parameters
        std::vector<Byte> stdInitializationParameters;// = ::WaitForInitializationParameters();
        // Now we initialize the RootOfTrustNode. Without that, we will not know how to
        // communicate securely back to the RootOfTrust to initialize it.
        ::InitializeRootOfTrust(oCommandLineArguments.GetString("ipc").c_str(), stdInitializationParameters);
        std::cout << "<<< Initializer process" << std::endl;
    }

    catch (BaseException oException)
    {
        std::cout << "InitializerProcess" << std::endl
                  << "\r\033[1;31m---------------------------------------------------------------------------------\033[0m" << std::endl
                  << "\033[1;31m%s\033[0m" << oException.GetExceptionMessage() << std::endl
                  << "\033[1;31mThrow from ->|File = \033[0m" << oException.GetFilename() << std::endl
                  << "\033[1;31m             |Function = \033[0m" << oException.GetFunctionName() << std::endl
                  << "\033[1;31m             |Line number = \033[0m" << oException.GetLineNumber() << std::endl
                  << "\033[1;31mCaught in -->|File = \033[0m" << __FILE__ << std::endl
                  << "\033[1;31m             |Function = \033[0m" << __func__ << std::endl
                  << "\033[1;31m             |Line number = \033[0m" << __LINE__ << std::endl
                  << "\r\033[1;31m---------------------------------------------------------------------------------\033[0m" << std::endl;
    }

    catch (...)
    {
        std::cout << "InitializerProcess" << std::endl
                  << "\r\033[1;31m---------------------------------------------------------------------------------\033[0m" << std::endl
                  << "\033[1;31mOH NO, AN UNKNOWN EXCEPTION!!!\033[0m" << std::endl << std::endl
                  << "\033[1;31mCaught in -->|File = \033[0m" << __FILE__ << std::endl
                  << "\033[1;31m             |Function = \033[0m" << __func__ << std::endl
                  << "\033[1;31m             |Line number = \033[0m" << __LINE__ << std::endl
                  << "\r\033[1;31m---------------------------------------------------------------------------------\033[0m" << std::endl;
    }

    return 0;
}
